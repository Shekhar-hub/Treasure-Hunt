
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Hp
 */
public class userhome extends javax.swing.JFrame {

    int w, h;

    userhome(String username) {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(153, 255, 204));
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        this.w = d.width;
        this.h = d.height;
        setSize(w, h);

        getnameandphoto(username);
        getallcategories();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomename = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainpanel = new javax.swing.JPanel();
        lbpreview = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        welcomename.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        getContentPane().add(welcomename);
        welcomename.setBounds(270, 30, 540, 70);

        mainpanel.setBackground(new java.awt.Color(51, 51, 51));
        mainpanel.setMinimumSize(new java.awt.Dimension(500, 500));
        mainpanel.setPreferredSize(new java.awt.Dimension(32767, 32767));

        javax.swing.GroupLayout mainpanelLayout = new javax.swing.GroupLayout(mainpanel);
        mainpanel.setLayout(mainpanelLayout);
        mainpanelLayout.setHorizontalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, Short.MAX_VALUE, Short.MAX_VALUE)
        );
        mainpanelLayout.setVerticalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, Short.MAX_VALUE, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(mainpanel);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(230, 140, 990, 510);

        lbpreview.setText("jLabel1");
        lbpreview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(lbpreview);
        lbpreview.setBounds(30, 10, 190, 180);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton1.setText("My Rooms");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(30, 230, 190, 40);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton2.setText("Change Password");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(30, 280, 190, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        myrooms mr = new myrooms();
        mr.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new userchangepassword().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new userhome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbpreview;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JLabel welcomename;
    // End of variables declaration//GEN-END:variables
private void getallcategories() {
        int x = 10, y = 10;
        for (int i = 0; i < GlobalData.categories.length; i++) {
            categorypanels cp[] = new categorypanels[GlobalData.categories.length];
            cp[i] = new categorypanels();
            cp[i].jScrollPane1.setSize((w - 100), 300);
            cp[i].setBounds(x, y, w - 50, 400); //edit
            cp[i].mainpanel.setPreferredSize(new Dimension(w - 100, 300));
            cp[i].lbcategoryname.setText(GlobalData.categories[i]);
            y = y + 420;

            try {
                HttpResponse<String> httpResponse = Unirest.get(GlobalData.hostname + "/GetCategories")
                        .queryString("category", GlobalData.categories[i])
                        .asString();
                String ans = httpResponse.getBody().trim();
                System.out.println(ans);
                int j = 0, m = 10, n = 10;
                StringTokenizer st = new StringTokenizer(ans, ";;");
                int count = st.countTokens();
                roompanel rp[] = new roompanel[count];

                while (st.hasMoreTokens()) {
                    String row = st.nextToken();
                    System.out.println(row);
                    StringTokenizer stcol = new StringTokenizer(row, "~~");
                    String roomid = stcol.nextToken();
                    String roomname = stcol.nextToken();
                    String category = stcol.nextToken();
                    String photo = stcol.nextToken();
                    rp[j] = new roompanel();
                    rp[j].lbroomname.setText(roomname);
                    BufferedImage bufferedImage, newimage = null;
                    ImageIcon icon = new ImageIcon("");
                    try {
                        URL url = new URL(GlobalData.hostname + "/GetResource/" + photo);
                        System.out.println("url : " + url);
                        bufferedImage = ImageIO.read(url);
                        newimage = resizephoto(bufferedImage, rp[j].lbpreview.getWidth(), rp[j].lbpreview.getHeight());
                        rp[j].setBounds(m, n, 200, 200);

                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    icon = new ImageIcon(newimage);
                    rp[j].lbpreview.setIcon(icon);
                    rp[j].addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent me) {
                            if (me.getClickCount() == 2) {
                                JoinGroup jg = new JoinGroup(roomid);
                                jg.setVisible(true);
                            }
                        }

                    });
                    cp[i].mainpanel.add(rp[j]);
                    mainpanel.add(cp[i]);
                    repaint();
                    mainpanel.repaint();
                    cp[i].repaint();
                    cp[i].mainpanel.repaint();
                    System.out.println(x);
                    System.out.println(y);

//                    y = y + 200;
                    x = 10;
                    m = m + 250;
                    j++;
                    mainpanel.setPreferredSize(new Dimension(w, y));
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    BufferedImage resizephoto(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }

    private void getnameandphoto(String username) {
        try {
            HttpResponse<String> response = Unirest.get(GlobalData.hostname + "/GetNameandPhoto")
                    .queryString("username", username)
                    .asString();
            if (response.getStatus() == 200) {
                String ans = response.getBody();
                System.out.println("name and photo ::" + ans);
                StringTokenizer st = new StringTokenizer(ans, "~~");
                while (st.hasMoreTokens()) {
                    String displayname = st.nextToken();
                    String photo = st.nextToken();
                    BufferedImage bufferedImage, newimage = null;
                    ImageIcon icon = new ImageIcon("");
                    try {
                        URL url = new URL(GlobalData.hostname + "/GetResource/" + photo);
                        System.out.println("url : " + url);
                        bufferedImage = ImageIO.read(url);
                        newimage = resizephoto(bufferedImage, lbpreview.getWidth(), lbpreview.getHeight());
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    icon = new ImageIcon(newimage);
                    lbpreview.setIcon(icon);
                    welcomename.setText("Welcome " + displayname);
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
