
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Hp
 */
public class ManageCategories extends javax.swing.JFrame {
    
    File file;
    String categories[] = {"Technology", "Sports", "Places"};
    ArrayList<categories> alitem = new ArrayList<>();
    MyTableModel tm = new MyTableModel();

    /**
     * Creates new form ManageCategories
     */
    public ManageCategories(String un) {
        initComponents();
        setSize(1500, 1000);
        getContentPane().setBackground(new java.awt.Color(153, 255, 204));
        jLabel5.setText("Welcome " + un);
        combocat.removeAllItems();
        for (int i = 0; i < categories.length; i++) {
            combocat.addItem(categories[i]);
        }
        jTable1.setModel(tm);
        getallrooms();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfroomname = new javax.swing.JTextField();
        lbpreview = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        combocat = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add new rooms");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 150, 300, 60);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Room Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 290, 120, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Photo");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 450, 110, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Category");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 550, 110, 40);
        getContentPane().add(tfroomname);
        tfroomname.setBounds(150, 280, 270, 40);

        lbpreview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lbpreview);
        lbpreview.setBounds(150, 400, 140, 130);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(310, 450, 100, 40);

        combocat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        combocat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(combocat);
        combocat.setBounds(150, 550, 270, 50);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(150, 640, 130, 40);

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(590, 230, 810, 380);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setText("Already added rooms");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(760, 140, 430, 60);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(850, 630, 230, 50);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 20, 1360, 70);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser jfc = new JFileChooser("C:\\Users\\Hp\\Downloads\\Project details");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpeg", "jpg", "bmp", "png");
        jfc.setFileFilter(filter);
        jfc.setAcceptAllFileFilterUsed(false);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = jfc.getSelectedFile();
            try {
                BufferedImage img = ImageIO.read(file);
                //Image newimg = img.getScaledInstance(lbpreview.getWidth(), lbpreview.getHeight(), Image.SCALE_SMOOTH);
                BufferedImage newimg = resizephoto(img, lbpreview.getWidth(), lbpreview.getHeight());
                
                lbpreview.setIcon(new ImageIcon(newimg));
            } catch (Exception ex) {
                System.out.println("problem accessing file" + file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String roomname = tfroomname.getText();
            String category = (String) combocat.getSelectedItem();
            if (roomname.equals("") || category.equals("")) {
                JOptionPane.showMessageDialog(this, "All fields are required");
            }
            HttpResponse<String> response = Unirest.post(GlobalData.hostname + "/addroom")
                    .queryString("roomname", roomname)
                    .queryString("category", category)
                    .field("photo", file)
                    .asString();
            if (response.getStatus() == 200) {
                JOptionPane.showMessageDialog(this, response.getBody());
            } else {
                JOptionPane.showMessageDialog(this, response.getStatusText());
            }
            getallrooms();
        } catch (UnirestException ex) {
            Logger.getLogger(ManageCategories.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
        } else {
            int ans = JOptionPane.showConfirmDialog(this, "Do you really want to delete?");
            if (ans == JOptionPane.YES_OPTION) {
                try {
                    String roomid = alitem.get(jTable1.getSelectedRow()).roomid;
                    HttpResponse<String> response = Unirest.get(GlobalData.hostname + "/deleteroom")
                            .queryString("roomid", roomid)
                            .asString();
                    if (response.getStatus() == 200) {
                        JOptionPane.showMessageDialog(this, response.getBody());
                    }
//                    tm.fireTableDataChanged();
                    getallrooms();
                } catch (UnirestException ex) {
                    Logger.getLogger(ManageCategories.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new ManageCategories().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combocat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbpreview;
    private javax.swing.JTextField tfroomname;
    // End of variables declaration//GEN-END:variables

    private void getallrooms() {
        jTable1.removeAll();
        try {
            HttpResponse<String> httpResponse = Unirest.get(GlobalData.hostname + "/GetRooms").asString();
            String ans = httpResponse.getBody().trim();
            System.out.println(ans);
            StringTokenizer st = new StringTokenizer(ans, ";;");
            alitem.clear();
            while (st.hasMoreTokens()) {
                String row = st.nextToken();
                System.out.println(row);
                StringTokenizer stcol = new StringTokenizer(row, "~~");
                alitem.add(new categories(stcol.nextToken(), stcol.nextToken(), stcol.nextToken(), stcol.nextToken()));
            }
            jTable1.getColumnModel().getColumn(3).setCellRenderer(new ImageRenderer());
            jTable1.setRowHeight(100);
            tm.fireTableDataChanged();
        } catch (UnirestException ex) {
            ex.printStackTrace();
        }
    }
    
    BufferedImage resizephoto(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }
    
    class categories {
        
        String roomid, roomname, category, photo;
        
        public categories(String roomid, String roomname, String category, String photo) {
            this.roomid = roomid;
            this.roomname = roomname;
            this.category = category;
            this.photo = photo;
        }
        
    }
    
    class MyTableModel extends AbstractTableModel {
        
        String colname[];
        
        MyTableModel() {
            this.colname = new String[]{"Roomid", "Roomname", "Category", "Photo"};
        }
        
        @Override
        public int getRowCount() {
            return alitem.size();
        }
        
        @Override
        public int getColumnCount() {
            return colname.length;
        }
        
        @Override
        public String getColumnName(int col) {
            return colname[col];
        }
        
        @Override
        public Object getValueAt(int i, int j) {
            switch (j) {
                case 0:
                    return alitem.get(i).roomid;
                case 1:
                    return alitem.get(i).roomname;
                case 2:
                    return alitem.get(i).category;
                case 3:
                    return alitem.get(i).photo;
                default:
                    return null;
            }
        }
    }
    
    class ImageRenderer extends DefaultTableCellRenderer {
        
        JLabel lbl = new JLabel();
        
        ImageIcon icon = new ImageIcon("");
        BufferedImage bufferedImage, newimage;
        
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                boolean hasFocus, int row, int column) {
            try {
                URL url = new URL(GlobalData.hostname + "/GetResource/" + alitem.get(row).photo);
                System.out.println("url : " + url);
                bufferedImage = ImageIO.read(url);
                newimage = resizephoto(bufferedImage, 100, 100);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            icon = new ImageIcon(newimage);
            lbl.setIcon(icon);
            lbl.setBounds(0, 0, 100, 100);
            return lbl;
        }
        
    }
}
