
import java.math.BigInteger;
import java.sql.*;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author DELL
 */
public class Add_Sales extends javax.swing.JInternalFrame {

    /**
     * Creates new form Stock
     */
    Connection con;

    public Add_Sales(Connection con) {
        initComponents();
        this.con = con;

        brand_items();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sales_background_panel = new javax.swing.JPanel();
        sales_details_panel = new javax.swing.JPanel();
        submit_btn = new javax.swing.JButton();
        reset_btn = new javax.swing.JButton();
        id_label = new javax.swing.JLabel();
        id_txt = new javax.swing.JTextField();
        date_txt = new javax.swing.JTextField();
        date_label = new javax.swing.JLabel();
        bill_no_label = new javax.swing.JLabel();
        bill_no_txt = new javax.swing.JTextField();
        customer_label = new javax.swing.JLabel();
        customer_txt = new javax.swing.JTextField();
        address_label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        address_txt_area = new javax.swing.JTextArea();
        contact_label = new javax.swing.JLabel();
        contact_txt = new javax.swing.JTextField();
        contact2_label = new javax.swing.JLabel();
        contact2_txt = new javax.swing.JTextField();
        email_label = new javax.swing.JLabel();
        email_txt = new javax.swing.JTextField();
        product_label = new javax.swing.JLabel();
        product_txt = new javax.swing.JTextField();
        product_cmb = new javax.swing.JComboBox<>();
        quantity_label = new javax.swing.JLabel();
        mode_cmb = new javax.swing.JComboBox<>();
        price_label = new javax.swing.JLabel();
        price_txt = new javax.swing.JTextField();
        total_amount_label = new javax.swing.JLabel();
        payment_label = new javax.swing.JLabel();
        payment_txt = new javax.swing.JTextField();
        creditor_label = new javax.swing.JLabel();
        creditor_txt = new javax.swing.JTextField();
        due_date_label = new javax.swing.JLabel();
        quantity_cmb = new javax.swing.JComboBox<>();
        due_date_txt = new javax.swing.JTextField();
        mode_label = new javax.swing.JLabel();
        total_amount_scrollpanel = new javax.swing.JScrollPane();
        total_amount_txt = new javax.swing.JTextField();
        convert_amount1 = new javax.swing.JButton();
        brand_label = new javax.swing.JLabel();
        brand_txt = new javax.swing.JTextField();
        brand_cmb = new javax.swing.JComboBox<>();
        sales_form_panel = new javax.swing.JPanel();
        add_sales_entry_label = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sales_background_panel.setBackground(new java.awt.Color(255, 153, 0));
        sales_background_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sales_details_panel.setBackground(new java.awt.Color(255, 255, 255));
        sales_details_panel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        sales_details_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        submit_btn.setBackground(new java.awt.Color(0, 0, 204));
        submit_btn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        submit_btn.setForeground(new java.awt.Color(255, 255, 255));
        submit_btn.setText("Submit");
        submit_btn.setBorder(null);
        submit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_btnActionPerformed(evt);
            }
        });
        sales_details_panel.add(submit_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 640, 80, 30));

        reset_btn.setBackground(new java.awt.Color(0, 0, 204));
        reset_btn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        reset_btn.setForeground(new java.awt.Color(255, 255, 255));
        reset_btn.setText("Reset");
        reset_btn.setBorder(null);
        reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_btnActionPerformed(evt);
            }
        });
        sales_details_panel.add(reset_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 640, 80, 30));

        id_label.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        id_label.setText("ID");
        sales_details_panel.add(id_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        id_txt.setEditable(false);
        id_txt.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        id_txt.setEnabled(false);
        sales_details_panel.add(id_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 90, 30));

        date_txt.setEditable(false);
        date_txt.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        date_txt.setEnabled(false);
        sales_details_panel.add(date_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 10, 150, 30));

        date_label.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        date_label.setText("Date");
        sales_details_panel.add(date_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 10, -1, -1));

        bill_no_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bill_no_label.setText("Bill No");
        sales_details_panel.add(bill_no_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        bill_no_txt.setEditable(false);
        bill_no_txt.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        bill_no_txt.setEnabled(false);
        sales_details_panel.add(bill_no_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 320, 30));

        customer_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        customer_label.setText("Customer");
        sales_details_panel.add(customer_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        customer_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customer_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_txtActionPerformed(evt);
            }
        });
        sales_details_panel.add(customer_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, 320, 30));

        address_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        address_label.setText("Address");
        sales_details_panel.add(address_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        address_txt_area.setColumns(20);
        address_txt_area.setRows(5);
        jScrollPane1.setViewportView(address_txt_area);

        sales_details_panel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 320, -1));

        contact_label.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        contact_label.setText("Contact No.");
        sales_details_panel.add(contact_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        contact_txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contact_txtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contact_txtFocusLost(evt);
            }
        });
        sales_details_panel.add(contact_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 320, 30));

        contact2_label.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        contact2_label.setText("Contact No. 2(if any)");
        sales_details_panel.add(contact2_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, -1, -1));

        contact2_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact2_txtActionPerformed(evt);
            }
        });
        sales_details_panel.add(contact2_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, 320, 30));

        email_label.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        email_label.setText("E-Mail");
        sales_details_panel.add(email_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, -1));

        email_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email_txtActionPerformed(evt);
            }
        });
        sales_details_panel.add(email_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 320, 30));

        product_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        product_label.setText("Prodouct");
        sales_details_panel.add(product_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 180, -1, -1));

        product_txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                product_txtFocusLost(evt);
            }
        });
        product_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_txtActionPerformed(evt);
            }
        });
        sales_details_panel.add(product_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 180, 320, 30));

        product_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----Select Product-----" }));
        product_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_cmbActionPerformed(evt);
            }
        });
        sales_details_panel.add(product_cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 180, 150, 30));

        quantity_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        quantity_label.setText("Quantity");
        sales_details_panel.add(quantity_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 240, -1, -1));

        mode_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----Select Mode-----", "Cash", "Cheque", "Online" }));
        sales_details_panel.add(mode_cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 540, 320, 30));

        price_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        price_label.setText("Price(in Rs.)");
        sales_details_panel.add(price_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, -1, -1));

        price_txt.setEditable(false);
        price_txt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        price_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                price_txtActionPerformed(evt);
            }
        });
        sales_details_panel.add(price_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 300, 320, 30));

        total_amount_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        total_amount_label.setText("Total Amount");
        sales_details_panel.add(total_amount_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 360, -1, -1));

        payment_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        payment_label.setText("Payment");
        sales_details_panel.add(payment_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 430, -1, -1));

        payment_txt.setEnabled(false);
        payment_txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                payment_txtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                payment_txtFocusLost(evt);
            }
        });
        payment_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payment_txtActionPerformed(evt);
            }
        });
        sales_details_panel.add(payment_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 430, 320, 30));

        creditor_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        creditor_label.setText("Creditor");
        sales_details_panel.add(creditor_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 480, -1, -1));

        creditor_txt.setEditable(false);
        creditor_txt.setEnabled(false);
        creditor_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditor_txtActionPerformed(evt);
            }
        });
        sales_details_panel.add(creditor_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 480, 320, 30));

        due_date_label.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        due_date_label.setText("Due Date");
        sales_details_panel.add(due_date_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 660, -1, -1));

        quantity_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----Select Quantity-----" }));
        quantity_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantity_cmbActionPerformed(evt);
            }
        });
        sales_details_panel.add(quantity_cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 240, 320, 30));

        due_date_txt.setEditable(false);
        due_date_txt.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        due_date_txt.setEnabled(false);
        sales_details_panel.add(due_date_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 660, 150, 30));

        mode_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        mode_label.setText("Mode");
        sales_details_panel.add(mode_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 540, -1, -1));

        total_amount_txt.setEditable(false);
        total_amount_txt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total_amount_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_amount_txtActionPerformed(evt);
            }
        });
        total_amount_scrollpanel.setViewportView(total_amount_txt);

        sales_details_panel.add(total_amount_scrollpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 350, 320, 70));

        convert_amount1.setText("Convert");
        convert_amount1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convert_amount1ActionPerformed(evt);
            }
        });
        sales_details_panel.add(convert_amount1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 360, 80, 40));

        brand_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        brand_label.setText("Brand Name");
        sales_details_panel.add(brand_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, -1, -1));

        brand_txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                brand_txtFocusLost(evt);
            }
        });
        brand_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brand_txtActionPerformed(evt);
            }
        });
        sales_details_panel.add(brand_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 120, 320, 30));

        brand_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----Select Brand-----" }));
        brand_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brand_cmbActionPerformed(evt);
            }
        });
        sales_details_panel.add(brand_cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 120, 150, 30));

        sales_background_panel.add(sales_details_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 1240, 700));

        sales_form_panel.setBackground(new java.awt.Color(0, 51, 204));

        add_sales_entry_label.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        add_sales_entry_label.setForeground(new java.awt.Color(255, 255, 255));
        add_sales_entry_label.setText("Add New Sales Entry");
        sales_form_panel.add(add_sales_entry_label);

        sales_background_panel.add(sales_form_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 1240, -1));

        getContentPane().add(sales_background_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 840));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void submit_sales_details() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm:ss:SSS");
        LocalTime now = LocalTime.now();
        current_time_set = dtf.format(now);
        //System.out.println(dtf.format(now));

        String query = "insert into sale(serial_id,customer_id,bill_no,product_name,product_quantity,total_amount,payment,mode_payment,creditors,sold_date,sold_time,due_date,brand_name) values(?,?,?,?,?,?,?,?,?,?,?,?,?)";
        try {
            PreparedStatement ps = con.prepareStatement(query);
            if (Add_Customer.serial_id.matches("")) {
                String query1 = "select serial_id from customer where contact_no=?";
                PreparedStatement ps1 = con.prepareStatement(query1);
                ps1.setString(1, Add_Customer.contact_no);
                ResultSet rs = ps1.executeQuery();
                while (rs.next()) {
                    Add_Customer.serial_id = rs.getString("serial_id");
                }
            }
            ps.setString(1,"EXIM"+count_id);
            System.out.println(count_id);
            ps.setString(2, Add_Customer.serial_id);
            System.out.println(Add_Customer.serial_id);
            ps.setString(3,"EXIM"+bill_no);
                      System.out.println(bill_no);
            ps.setString(4, product);
            System.out.println(product);
            ps.setString(5, (String) quantity_cmb.getSelectedItem());
             System.out.println(quantity_cmb.getSelectedItem());
            ps.setLong(6, sum);
             System.out.println(sum);
            ps.setString(7, payment);
            System.out.println(payment);
            ps.setString(8, (String) mode_cmb.getSelectedItem());
              System.out.println(mode_cmb.getSelectedItem());
            ps.setLong(9, balance);
             System.out.println(creditor);
            ps.setString(10, todayDate);
            System.out.println(todayDate);
            ps.setString(11,current_time_set);
             System.out.println(current_time_set);
            ps.setString(12, dueDate);
             ps.setString(13,brand);
             System.out.println(dueDate);
            ps.executeUpdate();
            System.out.println("done");

        } catch (SQLException ex) {
            Logger.getLogger(Add_Sales.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void submit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_btnActionPerformed
        // TODO add your handling code here:

        product = product_txt.getText();
        brand=brand_txt.getText();
        quantity = quantity_cmb.getSelectedIndex();
        payment = payment_txt.getText();
        mode = mode_cmb.getSelectedIndex();
        creditor = creditor_txt.getText();

        Add_Customer.name = customer_txt.getText();
        Add_Customer.address = address_txt_area.getText();
        Add_Customer.contact_no = contact_txt.getText();
        Add_Customer.other_contact_no = contact2_txt.getText();
        Add_Customer.email = email_txt.getText();
        if (Add_Customer.contact_no.trim().matches("")) {
            JOptionPane.showMessageDialog(this, "Contact Number Field cannot be empty");
        } else if (Add_Customer.name.trim().matches("")) {
            JOptionPane.showMessageDialog(this, "Customer Field cannot be empty");
        } else if (Add_Customer.address.trim().matches("")) {
            JOptionPane.showMessageDialog(this, "Address Field cannot be empty");
        } else if (Add_Customer.email.trim().matches("")) {
            JOptionPane.showMessageDialog(this, "E-mail Field cannot be empty");
        }
        else if (brand.trim().matches("")) {
            JOptionPane.showMessageDialog(this, "Brand Field cannot be empty");
        }
        else if (product.trim().matches("")) {
            JOptionPane.showMessageDialog(this, "Product Field cannot be empty");
        } else if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Quantity Field cannot be empty");
        } else if (payment.trim().matches("")) {
            JOptionPane.showMessageDialog(this, "payment Field cannot be empty");
        } else if (mode <= 0) {
            JOptionPane.showMessageDialog(this, "Mode Field cannot be empty");
        } else {
            if (Add_Customer.serial_id.matches("")) {
                Add_Customer.submit_customer_details(con);
            } else {
                Add_Customer.update_customer_details(con);
            }
            submit_sales_details();
            product_quantity_minus();
            JOptionPane.showMessageDialog(this, "Data added successfully!");
            reset_button();
            brand_items();
            
            //show_customer_details();

        }

    }//GEN-LAST:event_submit_btnActionPerformed
 public void product_quantity_minus()
{
    String product_quantity=String.valueOf(total_quantity-Integer.parseInt(qty));
    String query="update export_item set product_quantity=? where product_name=?";
        try {
            PreparedStatement ps=con.prepareStatement(query);
            ps.setString(1,product_quantity);
            ps.setString(2,product_name);
            ps.executeUpdate();
            ps.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(Add_Sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}
    private void reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_btnActionPerformed
        // TODO add your handling code here:
        reset_button();
        brand_items();

    }//GEN-LAST:event_reset_btnActionPerformed

    private void contact2_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact2_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contact2_txtActionPerformed

    private void email_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email_txtActionPerformed

    private void product_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_txtActionPerformed

    private void price_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_price_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_price_txtActionPerformed

    private void total_amount_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_amount_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_total_amount_txtActionPerformed

    private void payment_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payment_txtActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_payment_txtActionPerformed

    private void creditor_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditor_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditor_txtActionPerformed

    private void contact_txtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contact_txtFocusGained
        // TODO add your handling code here:
        /*String contact_no=contact_txt.getText();
        String query="select * from customer where contact_no=?";
        try {
            PreparedStatement ps=con.prepareStatement(query);
            ps.setString(1,contact_no);
            ResultSet rs=
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Add_Sales.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        System.out.print("focus gained");


    }//GEN-LAST:event_contact_txtFocusGained

    private void contact_txtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contact_txtFocusLost
        // TODO add your handling code here:
        String contact_no = contact_txt.getText();
        Add_Customer.serial_id = "";
        if (!contact_no.isEmpty()) {
            String query = "select * from customer where contact_no=?";
            try {
                PreparedStatement ps = con.prepareStatement(query);
                ps.setString(1, contact_no);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    Add_Customer.serial_id = rs.getString("serial_id");
                    customer_txt.setText(rs.getString("name"));
                    address_txt_area.setText(rs.getString("address"));
                    contact2_txt.setText(rs.getString("other_contact_no"));
                    email_txt.setText(rs.getString("e_mail"));

                }

            } catch (SQLException ex) {
                Logger.getLogger(Add_Sales.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        validate();
        System.out.print("focus lost");
    }//GEN-LAST:event_contact_txtFocusLost
public void reset_button()
{
   contact_txt.setText("");
   customer_txt.setText("");
   address_txt_area.setText("");
   contact2_txt.setText("");
   email_txt.setText("");
   
}
    private void customer_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_txtActionPerformed
    public void brand_items() {
        product_txt.setText("");
        brand_txt.setText("");
        brand_cmb.removeAllItems();
        brand_cmb.addItem("-----Select Brand-----");
        brand_id.clear();
        //Random id=new Random();
        count_id = "0";
        bill_no = "0";
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MMM/YYYY");
        LocalDate localDate = LocalDate.now();
        todayDate = dtf.format(localDate);
        //String todayDate=String.valueOf(localDate);
        LocalDate futureDate = LocalDate.now().plusMonths(1);
        dueDate = dtf.format(futureDate);
        System.out.println(dtf.format(localDate));

        String query1 = "select serial_id as count_id from sale order by serial_id desc";
        String query2 = "select bill_no as count_bill from sale where sold_date=? order by bill_no desc ";
        String query = "select * from product_brand";
        try {
            PreparedStatement ps = con.prepareStatement(query);
            PreparedStatement ps1 = con.prepareStatement(query1);
            PreparedStatement ps2 = con.prepareStatement(query2);
            ps2.setString(1, todayDate);

            ResultSet rs = ps.executeQuery();
            ResultSet rs1 = ps1.executeQuery();
            ResultSet rs2 = ps2.executeQuery();
            if (rs1.next()) {
                count_id = rs1.getString("count_id");

            }
            if (rs2.next()) {
                bill_no = rs2.getString("count_bill");
            }
            while (rs.next()) {
                brand_cmb.addItem(rs.getString("brand_name"));
                brand_id.add(rs.getString("brand_id"));

            }
            String count_id_separator[]=new String[4000];
             String bill_id_separator[]=new String[4000];
            count_id_separator = count_id.split("EXIM");
            bill_id_separator = bill_no.split("EXIM");
            if(count_id_separator.length>1)
            {
            count_id= String.valueOf((Integer.parseInt(count_id_separator[1]) + 1));
            }
            else
            {
               count_id= String.valueOf((Integer.parseInt(count_id) + 1));
            }
            if(bill_id_separator.length>1)
            {
            bill_no = String.valueOf((Integer.parseInt(bill_id_separator[1]) + 1));
            }
            else
            {
                bill_no = String.valueOf((Integer.parseInt(bill_no) + 1));
            }
            
            id_txt.setText("EXIM"+count_id);
            bill_no_txt.setText("EXIM"+bill_no);
            date_txt.setText(todayDate);
            due_date_txt.setText(dueDate);

        } catch (SQLException ex) {
            Logger.getLogger(Add_Sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
   public void product_quantity()
    {
        quantity_cmb.removeAllItems();
        quantity_cmb.addItem("-----Select Quantity-----");
        product_name = (String) product_cmb.getSelectedItem();

        if (product_cmb.getSelectedIndex() > 0) {
            product_txt.setText(product_name);
            String query = "select * from export_item where product_name=?";
            try {
                PreparedStatement ps = con.prepareStatement(query);
                ps.setString(1, product_name);
                ResultSet rs = ps.executeQuery();
                total_quantity = 0;
                price = 0;
                while (rs.next()) {
                    total_quantity = rs.getInt("product_quantity");
                    price = rs.getInt("product_price");

                }
                for (int i = total_quantity; i >= 1; i--) {
                    quantity_cmb.addItem(String.valueOf(i));
                }
                //String output=NumberFormat.getInstance().format(price);
                //System.out.println(output);
                price_txt.setText(Number_converter.convertToIndianCurrency(String.valueOf(price)));

            } catch (SQLException ex) {
                Logger.getLogger(Add_Sales.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            product_txt.setText("");
            price_txt.setText("");
            payment_txt.setText("");
        }
    }
    private void product_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_cmbActionPerformed
        // TODO add your handling code here:
        product_quantity();
    }//GEN-LAST:event_product_cmbActionPerformed

    private void quantity_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantity_cmbActionPerformed
        // TODO add your handling code here:
        sum = 0;
        quantity = quantity_cmb.getSelectedIndex();
        System.out.println(quantity);
        qty="";
        if (quantity > 0) {
            
            qty = (String) quantity_cmb.getSelectedItem();
            sum = (price) * (Integer.parseInt(qty));
            String total_amount = Number_converter.convertToIndianCurrency(String.valueOf(sum));
            total_amount_txt.setText(total_amount);
            payment_txt.setEnabled(true);
        } else {
            payment_txt.setText("");
            creditor_txt.setText("");
            total_amount_txt.setText("");
            mode_cmb.setSelectedIndex(0);
            payment_txt.setEnabled(false);
        }
    }//GEN-LAST:event_quantity_cmbActionPerformed

    private void payment_txtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_payment_txtFocusLost
        // TODO add your handling code here:
        String paid = payment_txt.getText();
        balance=0;
        try
        {
        if (!paid.isEmpty() && !paid.trim().matches("")) {
            
            balance = sum - Long.parseLong(paid);
            if(!conversion)
            {
            creditor_txt.setText(Number_converter.convertToIndianCurrency(String.valueOf(balance)));
            }
            else
            {
              creditor_txt.setText(NumberFormat.getInstance().format(balance));
            
            }
            } else {
            creditor_txt.setText("");
        }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Number is too long!!!");
        }
    }//GEN-LAST:event_payment_txtFocusLost

    private void product_txtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_product_txtFocusLost
        // TODO add your handling code here:
        boolean found_product=false;
        product_name="";
        product_name=product_txt.getText();
        if(!product_name.isEmpty())
        {
            for(int check=0;check<product_cmb.getItemCount();check++)
            {
                if(product_name.equalsIgnoreCase(product_cmb.getItemAt(check)))
                {
                    found_product=true;
                    product_cmb.setSelectedIndex(check);
                }
            }
            if(found_product)
            {
                System.out.println("found");

            }
            else
            {
                System.out.println(" Not found");
                brand_items();
                JOptionPane.showMessageDialog(this,"No Matching Item found!\nPlease refer Drop Down Menu...");

            }
        }
    }//GEN-LAST:event_product_txtFocusLost

    private void convert_amount1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convert_amount1ActionPerformed
        // TODO add your handling code here:
        if(!conversion)
        {
        price_txt.setText(NumberFormat.getInstance().format(price));
        total_amount_txt.setText(NumberFormat.getInstance().format(sum));
        creditor_txt.setText(NumberFormat.getInstance().format(balance));
        conversion=true;
        }
        else
        {
         price_txt.setText(Number_converter.convertToIndianCurrency(String.valueOf(price)));
         total_amount_txt.setText(Number_converter.convertToIndianCurrency(String.valueOf(sum)));
         creditor_txt.setText(Number_converter.convertToIndianCurrency(String.valueOf(balance)));
         conversion=false;
        }
        
    }//GEN-LAST:event_convert_amount1ActionPerformed

    private void payment_txtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_payment_txtFocusGained
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_payment_txtFocusGained

    private void brand_txtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_brand_txtFocusLost
        // TODO add your handling code here:
        boolean found_brand=false;
        brand_name="";
        brand_name=brand_txt.getText();
        if(!brand_name.isEmpty())
        {
            for(int check=0;check<brand_cmb.getItemCount();check++)
            {
                if(brand_name.equalsIgnoreCase(brand_cmb.getItemAt(check)))
                {
                    found_brand=true;
                    brand_cmb.setSelectedIndex(check);
                }
            }
            if(found_brand)
            {
                System.out.println("found");

            }
            else
            {
                System.out.println(" Not found");
                brand_items();
                JOptionPane.showMessageDialog(this,"No Matching Item found!\nPlease refer Drop Down Menu...");

            }
        }
    }//GEN-LAST:event_brand_txtFocusLost

    private void brand_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brand_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brand_txtActionPerformed

    private void brand_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brand_cmbActionPerformed
        // TODO add your handling code here:
        
        product_cmb.removeAllItems();
        product_cmb.addItem("-----Select Product-----");
        if(brand_cmb.getSelectedIndex()>0)
        {
            brand_txt.setText((String) brand_cmb.getSelectedItem());
            String brand_id_get=brand_id.get(brand_cmb.getSelectedIndex()-1);
        String query = "select * from export_item where brand_id=?";
     
        try {
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1,brand_id_get);
            ResultSet rs=ps.executeQuery();
             while (rs.next()) {
                product_cmb.addItem(rs.getString("product_name"));

            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Add_Sales.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
    }//GEN-LAST:event_brand_cmbActionPerformed

     int quantity = 0;
     int price = 0;
    long sum = 0;
    int total_quantity=0;
    String qty="";
    String product, total_amount, payment, creditor,brand;
    String count_id = "0";
    String bill_no = "0";
    String todayDate = "";
    String dueDate = "0";
    String product_name="";
    String brand_name="";
    long balance=0;
    int mode;
    String current_time_set="";
    ArrayList<String> brand_id=new ArrayList<String>();
    boolean conversion=false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel add_sales_entry_label;
    private javax.swing.JLabel address_label;
    private javax.swing.JTextArea address_txt_area;
    private javax.swing.JLabel bill_no_label;
    private javax.swing.JTextField bill_no_txt;
    public javax.swing.JComboBox<String> brand_cmb;
    private javax.swing.JLabel brand_label;
    public javax.swing.JTextField brand_txt;
    private javax.swing.JLabel contact2_label;
    private javax.swing.JTextField contact2_txt;
    private javax.swing.JLabel contact_label;
    private javax.swing.JTextField contact_txt;
    private javax.swing.JButton convert_amount1;
    private javax.swing.JLabel creditor_label;
    private javax.swing.JTextField creditor_txt;
    private javax.swing.JLabel customer_label;
    private javax.swing.JTextField customer_txt;
    private javax.swing.JLabel date_label;
    private javax.swing.JTextField date_txt;
    private javax.swing.JLabel due_date_label;
    private javax.swing.JTextField due_date_txt;
    private javax.swing.JLabel email_label;
    private javax.swing.JTextField email_txt;
    private javax.swing.JLabel id_label;
    private javax.swing.JTextField id_txt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> mode_cmb;
    private javax.swing.JLabel mode_label;
    private javax.swing.JLabel payment_label;
    public javax.swing.JTextField payment_txt;
    private javax.swing.JLabel price_label;
    public javax.swing.JTextField price_txt;
    public javax.swing.JComboBox<String> product_cmb;
    private javax.swing.JLabel product_label;
    public javax.swing.JTextField product_txt;
    public javax.swing.JComboBox<String> quantity_cmb;
    private javax.swing.JLabel quantity_label;
    private javax.swing.JButton reset_btn;
    private javax.swing.JPanel sales_background_panel;
    private javax.swing.JPanel sales_details_panel;
    private javax.swing.JPanel sales_form_panel;
    private javax.swing.JButton submit_btn;
    private javax.swing.JLabel total_amount_label;
    private javax.swing.JScrollPane total_amount_scrollpanel;
    private javax.swing.JTextField total_amount_txt;
    // End of variables declaration//GEN-END:variables
}
